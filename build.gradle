plugins {
	id 'java'
	id 'idea'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.cenacle.edge'
version = '0.0.1-SNAPSHOT'
description = 'phr-institution-search'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = JavaVersion.VERSION_17

repositories {
	maven {
		url = 'https://dev-tools.cenacle.com/nexus/repository/maven-snapshots/'
//		url = "http://10.16.3.8/nexus/repository/maven-snapshots/"
		allowInsecureProtocol = true
		credentials {
			username "repouser"
			password "flvhdbwj"
		}
	}
	mavenCentral()
}

ext {
	set('javaVersion', '17')
	set('encoding', 'utf-8')
	set('generatedSrcDir', 'src/main/generated')

	set('springCloudVersion', "2022.0.0")
	set('datasourceProxyVersion', '1.7')
	set('mapstructVersion', '1.5.3.Final')
	set('springDocVersion', '1.6.12')
	set('commonsBeanutilsVersion', '1.9.4')
	set('httpClientVersion', '4.5.13')
	set('lettuceVersion', '6.2.1.RELEASE')
	set('curatorVersion', '5.3.0')
	set('apachePoiVersion', '4.1.2')
	set('springBootDataVersion', '4.4.5')
	set('elasticSearchVersion', '7.17.6')
	set('log4j2.version', '2.19.0')

	phrSupportBomVersion = "alpha-SNAPSHOT"
}

idea {
	module {
		downloadSources = true
	}
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

configurations.all {
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
	exclude module: 'spring-boot-starter-logging'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "com.cenacle.edge:phr-support-bom:${phrSupportBomVersion}"
	}
}

dependencies {
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// db
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation "net.ttddyy:datasource-proxy:${datasourceProxyVersion}"

	// spring doc
	implementation "org.springdoc:springdoc-openapi-ui:${springDocVersion}"

	implementation 'org.springframework.boot:spring-boot-starter-log4j2'

	// etc
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'

	// monitoring
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'io.micrometer:micrometer-core'

	// es
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
//	implementation "org.springframework.data:spring-data-elasticsearch:${springBootDataVersion}"
//	implementation 'org.elasticsearch.client:elasticsearch-rest-high-level-client:8.7.1'
//	implementation "org.elasticsearch.client:elasticsearch-rest-client:${elasticSearchVersion}"
//	implementation "org.elasticsearch:elasticsearch:${elasticSearchVersion}"

	// apache
	implementation "org.apache.httpcomponents:httpclient:${httpClientVersion}"
	implementation "commons-beanutils:commons-beanutils:${commonsBeanutilsVersion}"
	implementation "org.apache.poi:poi:${apachePoiVersion}"
	implementation "org.apache.poi:poi-ooxml:${apachePoiVersion}"

	// mapstruct
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	compileOnly 'org.projectlombok:lombok'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.springframework.boot:spring-boot-starter-test'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	// querydsl
	implementation("com.querydsl:querydsl-jpa::jakarta")
	annotationProcessor("com.querydsl:querydsl-apt::jakarta")
	annotationProcessor("jakarta.annotation:jakarta.annotation-api")
	annotationProcessor("jakarta.persistence:jakarta.persistence-api")

	implementation "com.cenacle.edge:phr-support-servlet-jpa"

	// json
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'

	// for test
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
}

test {
	useJUnitPlatform()
}

bootJar {
	archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}

clean {
	delete 'out'
}
